
#########  x1  #########

[stepper_x1]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 400
endstop_pin: ^PG14


[tmc5160 stepper_x1]
cs_pin: PD11
spi_speed: 4000000
#   The SPI speed (in hz) to use when communicating with the device.
#   The default depends on the type of device.
spi_bus: spi1
#   If the micro-controller supports multiple SPI busses then one may
#   specify the micro-controller bus name here. The default depends on
#   the type of micro-controller.
#spi_software_miso_pin: PA6
#spi_software_mosi_pin: PA7
#spi_software_sclk_pin: PA5
run_current: 1.1
#hold_current: 0.4
sense_resistor: 0.075
interpolate: True
#spi_speed: 1000000
stealthchop_threshold: 0
#driver_IHOLDDELAY: 6
#driver_TPOWERDOWN: 10
#driver_TBL: 2
#driver_TOFF: 4
#driver_HEND: 5
#driver_HSTRT: 0
driver_tpfd: 0
#driver_pwm_autoscale: True
#driver_pwm_autograd: True
#driver_pwm_freq: 2
#driver_PWM_GRAD: 0
#driver_PWM_OFS: 0
#driver_PWM_REG: 0
#driver_PWM_LIM: 0





#########  y1  #########

[stepper_y1]
step_pin: PG4
dir_pin: PC1
enable_pin: !PA0
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 400
endstop_pin: ^PG13


[tmc5160 stepper_y1]
cs_pin: PC7
spi_speed: 4000000
#   The SPI speed (in hz) to use when communicating with the device.
#   The default depends on the type of device.
spi_bus: spi1
#   If the micro-controller supports multiple SPI busses then one may
#   specify the micro-controller bus name here. The default depends on
#   the type of micro-controller.
#spi_software_miso_pin: PA6
#spi_software_mosi_pin: PA7
#spi_software_sclk_pin: PA5
run_current: 1.1
#hold_current: 0.4
sense_resistor: 0.075
interpolate: True
#spi_speed: 1000000
stealthchop_threshold: 0
#driver_IHOLDDELAY: 6
#driver_TPOWERDOWN: 10
#driver_TBL: 2
#driver_TOFF: 4
#driver_HEND: 5
#driver_HSTRT: 0
driver_tpfd: 0
#driver_pwm_autoscale: True
#driver_pwm_autograd: True
#driver_pwm_freq: 2
#driver_PWM_GRAD: 0
#driver_PWM_OFS: 0
#driver_PWM_REG: 0
#driver_PWM_LIM: 0
