
# This file contains common pin mappings for the BigTreeTech OctoPus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

# Updated 11_16-2022


############################################################################
############################################################################
##########                        MCU's                         ############
############################################################################
############################################################################


[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_040035000150534E4E313120-if00


#[mcu rpi]
#serial: /tmp/klipper_host_mcu

[include fluidd.cfg]



############################################################################
############################################################################
##########                     Input Shaper                     ############
############################################################################
############################################################################

[adxl345]
cs_pin: PA15
spi_bus: spi3
axes_map: y,z,-x

[resonance_tester]
probe_points: 120,120,50
accel_chip: adxl345
#accel_chip_x:
#accel_chip_y:
#max_smoothing:
#min_freq: 5
#max_freq: 160
#accel_per_hz: 75 # Default 75
#hz_per_sec: 1 # Default 1


[input_shaper]
shaper_freq_x: 123.2  # max accel 58400
shaper_freq_y: 67.1  # max accel 16500
shaper_type_x: zv
shaper_type_y: mzv
#shaper_freq_x: 81.6  # frequency for the X mark of the test model
#shaper_freq_y: 53.2  # frequency for the Y mark of the test model
#shaper_type: zv



############################################################################
############################################################################
##########                      Printer                         ############
############################################################################
############################################################################

#[include kiauh_macros.cfg]

[include x1y1.cfg]

[include euclid.cfg]

#[include BTTSmartSensor.cfg]


[printer]
kinematics: corexy
max_velocity: 350
max_accel: 15000
max_accel_to_decel: 7500
square_corner_velocity: 10
max_z_velocity: 40
max_z_accel: 2000



[idle_timeout]
gcode:
     TURN_OFF_HEATERS
     M84
timeout: 8000 # Default 600

[virtual_sdcard]
path: /home/pi/printer_data/gcodes


[pause_resume]

[display_status]


[temperature_sensor Octopus]
sensor_type: temperature_mcu
sensor_mcu: mcu


[temperature_sensor Raspberry_pi]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

[temperature_sensor Chamber]
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PF7


[force_move]
enable_force_move: True

# Enable object exclusion
[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.1



############################################################################
############################################################################
##########                   Bed Leveling                       ############
############################################################################
############################################################################


[bed_mesh]
speed: 180
horizontal_move_z: 10
mesh_min: 5,41.5
mesh_max: 260,250
probe_count: 8,8
move_check_distance: 5
split_delta_z: .025
mesh_pps: 2, 2
algorithm: bicubic
bicubic_tension: 0.2
relative_reference_index: 21
#fade_start: 1
#fade_end: 250
#fade_target: 0



[z_tilt]
z_positions: 
	-10,-20
	135,265
	265,-20
points:
	5,5
	135,220
	265,5
speed: 300
horizontal_move_z: 20
retries: 3   #   Number of times to retry if the probed points aren't within a givin tolerance
retry_tolerance: 0.005


[gcode_macro G29]
gcode: 
  G28
  BED_MESH_CALIBRATE
  BED_MESH_PROFILE SAVE=p1
  G1 X0 Y0 Z5 F4000




############################################################################
############################################################################
##########                     Extruder                         ############
############################################################################
############################################################################

[extruder]
step_pin: PE6
dir_pin: !PA14
enable_pin: !PE0
heater_pin: PB11
#step_pulse_duration: 0.00000100
microsteps: 8
rotation_distance: 4.673
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.75
max_extrude_cross_section: 10
## Validate the following thermistor type to make sure it is correct
sensor_type: MAX31865
sensor_pin: PF8
spi_bus: spi1
#tc_use_50Hz_filter: False
#tc_averaging_count: 1
rtd_nominal_r: 100
rtd_reference_r: 426
rtd_num_of_wires: 2
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 320
pressure_advance = 0.025
pressure_advance_smooth_time: 0.04
max_extrude_only_distance: 500.0
max_power: 1.0
instantaneous_corner_velocity: 2.000
#   The maximum instantaneous velocity change (in mm/s) of the
#   extruder during the junction of two moves. The default is 1mm/s.
#max_extrude_only_accel: 2000
#   Maximum velocity (in mm/s) and acceleration (in mm/s^2) of the
#   extruder motor for retractions and extrude-only moves. These
#   settings do not have any impact on normal printing moves. If not
#   specified then they are calculated to match the limit an XY
#   printing move with a cross section of 4.0*nozzle_diameter^2 would
#   have.


[tmc5160 extruder]
cs_pin: PD3
spi_speed: 4000000
#   The SPI speed (in hz) to use when communicating with the device.
#   The default depends on the type of device.
spi_bus: spi1
#   If the micro-controller supports multiple SPI busses then one may
#   specify the micro-controller bus name here. The default depends on
#   the type of micro-controller.
#spi_software_miso_pin: PA6
#spi_software_mosi_pin: PA7
#spi_software_sclk_pin: PA5
#   Specify the above parameters to use "software based SPI". This
#   mode does not require micro-controller hardware support (typically
#   any general purpose pins may be used). The default is to not use
#   "software spi".
run_current: 0.80
interpolate: False
sense_resistor: 0.075
#hold_current: 0.4
stealthchop_threshold: 0
#driver_IHOLDDELAY: 6
#driver_TPOWERDOWN: 10
#driver_TBL: 3
#driver_TOFF: 3
#driver_HEND: 0
#driver_HSTRT: 0
driver_tpfd: 0
#driver_pwm_autoscale: True
#driver_pwm_autograd: True
#driver_pwm_freq: 2
#driver_PWM_GRAD: 0
#driver_PWM_OFS: 0
#driver_PWM_REG: 0
#driver_PWM_LIM: 0



############################################################################
############################################################################
##########                   X_Y Steppers                       ############
############################################################################
############################################################################


#########  x  #########

[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 400
endstop_pin: ^PG14
position_endstop: 270
position_max: 270
position_min: 0
homing_retract_dist: 5
homing_speed: 250
second_homing_speed: 5


[tmc5160 stepper_x]
cs_pin: PC4
diag1_pin: ^!PG6
spi_speed: 4000000
#   The SPI speed (in hz) to use when communicating with the device.
#   The default depends on the type of device.
spi_bus: spi1
#   If the micro-controller supports multiple SPI busses then one may
#   specify the micro-controller bus name here. The default depends on
#   the type of micro-controller.
#spi_software_miso_pin: PA6
#spi_software_mosi_pin: PA7
#spi_software_sclk_pin: PA5
run_current: 1.1
interpolate: True
#hold_current: 0.4
sense_resistor: 0.075
#spi_speed: 1000000
stealthchop_threshold: 0
#driver_IHOLDDELAY: 6
#driver_TPOWERDOWN: 10
#driver_TBL: 2
#driver_TOFF: 4
#driver_HEND: 5
#driver_HSTRT: 0
driver_tpfd: 0
#driver_pwm_autoscale: True
#driver_pwm_autograd: True
#driver_pwm_freq: 2
#driver_PWM_GRAD: 0
#driver_PWM_OFS: 0
#driver_PWM_REG: 0
#driver_PWM_LIM: 0


#########  y  #########

[stepper_y]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 400
endstop_pin: ^PG13
position_endstop: 0
homing_retract_dist: 5
position_max: 267
homing_speed: 250
second_homing_speed: 5

[tmc5160 stepper_y]
cs_pin: PC6
diag1_pin: ^!PG10
spi_speed: 4000000
#   The SPI speed (in hz) to use when communicating with the device.
#   The default depends on the type of device.
spi_bus: spi1
#   If the micro-controller supports multiple SPI busses then one may
#   specify the micro-controller bus name here. The default depends on
#   the type of micro-controller.
#spi_software_miso_pin: PA6
#spi_software_mosi_pin: PA7
#spi_software_sclk_pin: PA5
run_current: 1.1
interpolate: True
#hold_current: 0.4
sense_resistor: 0.075
#spi_speed: 1000000
stealthchop_threshold: 0
#driver_IHOLDDELAY: 6
#driver_TPOWERDOWN: 10
#driver_TBL: 2
#driver_TOFF: 4
#driver_HEND: 5
#driver_HSTRT: 0
driver_tpfd: 0
#driver_pwm_autoscale: True
#driver_pwm_autograd: True
#driver_pwm_freq: 2
#driver_PWM_GRAD: 0
#driver_PWM_OFS: 0
#driver_PWM_REG: 0
#driver_PWM_LIM: 0


############################################################################
############################################################################
##########                    Z Steppers                        ############
############################################################################
############################################################################



#########  z  #########

[stepper_z]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
microsteps: 8
rotation_distance: 4
full_steps_per_rotation: 200
endstop_pin: probe:z_virtual_endstop
position_min: -2
position_max: 330
homing_speed: 20
second_homing_speed: 4

[tmc5160 stepper_z]
cs_pin: PF2
spi_speed: 4000000
#   The SPI speed (in hz) to use when communicating with the device.
#   The default depends on the type of device.
spi_bus: spi1
#   If the micro-controller supports multiple SPI busses then one may
#   specify the micro-controller bus name here. The default depends on
#   the type of micro-controller.
#spi_software_miso_pin: PA6
#spi_software_mosi_pin: PA7
#spi_software_sclk_pin: PA5
run_current: 1.100
#hold_current: 0.600
interpolate: False
#stealthchop_threshold: 999999
#spi_speed: 1000000
stealthchop_threshold: 0
#driver_IHOLDDELAY: 6
#driver_TPOWERDOWN: 10
#driver_TBL: 2
#driver_TOFF: 4
#driver_HEND: 5
#driver_HSTRT: 0
driver_tpfd: 0
#driver_pwm_autoscale: True
#driver_pwm_autograd: True
#driver_pwm_freq: 2
#driver_PWM_GRAD: 0
#driver_PWM_OFS: 0
#driver_PWM_REG: 0
#driver_PWM_LIM: 0



#########  z1  #########

[stepper_z1]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
microsteps: 8
rotation_distance: 4
full_steps_per_rotation: 200


[tmc5160 stepper_z1]
cs_pin: PE4
spi_speed: 4000000
#   The SPI speed (in hz) to use when communicating with the device.
#   The default depends on the type of device.
spi_bus: spi1
#   If the micro-controller supports multiple SPI busses then one may
#   specify the micro-controller bus name here. The default depends on
#   the type of micro-controller.
#spi_software_miso_pin: PA6
#spi_software_mosi_pin: PA7
#spi_software_sclk_pin: PA5
run_current: 1.100
#hold_current: 0.600
interpolate: False
stealthchop_threshold: 0
#spi_speed: 1000000
#stealthchop_threshold: 0
#driver_IHOLDDELAY: 6
#driver_TPOWERDOWN: 10
#driver_TBL: 2
#driver_TOFF: 4
#driver_HEND: 5
#driver_HSTRT: 0
driver_tpfd: 0
#driver_pwm_autoscale: True
#driver_pwm_autograd: True
#driver_pwm_freq: 2
#driver_PWM_GRAD: 0
#driver_PWM_OFS: 0
#driver_PWM_REG: 0
#driver_PWM_LIM: 0



#########  z2  #########

[stepper_z2]
step_pin: PE2
dir_pin: !PE3
enable_pin: !PD4
microsteps: 8
rotation_distance: 4
full_steps_per_rotation: 200


[tmc5160 stepper_z2]
cs_pin: PE1
spi_speed: 4000000
#   The SPI speed (in hz) to use when communicating with the device.
#   The default depends on the type of device.
spi_bus: spi1
#   If the micro-controller supports multiple SPI busses then one may
#   specify the micro-controller bus name here. The default depends on
#   the type of micro-controller.
#spi_software_miso_pin: PA6
#spi_software_mosi_pin: PA7
#spi_software_sclk_pin: PA5
run_current: 1.100
#hold_current: 0.600
interpolate: False
#stealthchop_threshold: 999999
#spi_speed: 1000000
stealthchop_threshold: 0
#driver_IHOLDDELAY: 6
#driver_TPOWERDOWN: 10
#driver_TBL: 2
#driver_TOFF: 4
#driver_HEND: 5
#driver_HSTRT: 0
driver_tpfd: 0
#driver_pwm_autoscale: True
#driver_pwm_autograd: True
#driver_pwm_freq: 2
#driver_PWM_GRAD: 0
#driver_PWM_OFS: 0
#driver_PWM_REG: 0
#driver_PWM_LIM: 0




############################################################################
############################################################################
##########                    Heater-Bed                        ############
############################################################################
############################################################################



[heater_bed]
heater_pin: PA3
sensor_pin: PF3
sensor_type: EPCOS 100K B57560G104F
#control: watermark
min_temp: 0
max_temp: 130





############################################################################
############################################################################
##########                        Fans                          ############
############################################################################
############################################################################



[fan]
pin: PA8 # FAN0
cycle_time: 0.002

[heater_fan fan1]
pin: PE5 # FAN1



[multi_pin BFANS]
pins: PD13, PD14

[output_pin BoardFans]
pin=multi_pin:BFANS
pwm: True
hardware_pwm: False
value: 1.0


############################################################################
############################################################################
##########                        Macros                        ############
############################################################################
############################################################################

[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}

[gcode_macro M204]
rename_existing: M204.1
gcode:
  {% set f = params.F|default(0.5)|float %}

  {% if 'S' in params %}
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={ s * f }
  {% else %}
    {% if 'P' in params %}
      {% set p = params.P|float %}
      {% if 'T' in params %}
        {% set t = params.T|float %}
        {% if p < t %}
          SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
      {% endif %}
    {% elif 'T' in params %}
      {% set t = params.T|float %}
      SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
    {% endif %}
  {% endif %}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    M106 S0



[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 



    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}







############################################################################
############################################################################
##########                  Print Start Macros                  ############
############################################################################
############################################################################



[gcode_macro print_start]
gcode:
     print_start_1		#print start macro 1
     prime_line_regular	#draw prime line in corner of bed
 
  

[gcode_macro print_start_1]
gcode:
	G32
	G21  # set units to mm
	G90  # use absolute coordinates
	M83	# use relative extrusion
	G92 E0.0  # reset e count
	M220 S100 # reset speed multiplier
     BED_MESH_PROFILE LOAD=default


	
[gcode_macro prime_line_regular]
gcode:
	G1 Z40.0 F6000 #Move the platform down to 40mm
	G1 X10 Y5
	G92 E0
	G1 F300 E20
	G92 E0
	G0 F1500
	G1 X45 Z0.3 F5000
	G1 X260 E30 F2000
	G92 E0
	G0 F12000
  G1 E-1.2
	G1 Y20 Z0.2 
  G1 X240 Z10
	G92 E0

[gcode_macro set_postion_0]
gcode:
  SET_KINEMATIC_POSITION X=0 Y=0 Z=0


############################################################################
############################################################################
##########                        LEDs                          ############
############################################################################
############################################################################




[output_pin MAIN_RED]
pin: PB10
pwm: true
cycle_time: 0.010
;hardware_pwm: true
value: 0
shutdown_value: 0
scale: 255

[output_pin MAIN_GREEN]
pin:PD15
pwm: true
cycle_time: 0.010
;hardware_pwm: true
value: 0
shutdown_value: 0
scale: 255

[output_pin MAIN_BLUE]
pin: PD12
pwm: true
cycle_time: 0.010
;hardware_pwm: true
value: 0
shutdown_value: 0
scale: 255




[gcode_macro leds_all_off]
gcode:
     set_pin PIN=MAIN_RED VALUE=0
     set_pin PIN=MAIN_BLUE VALUE=0
     set_pin PIN=MAIN_GREEN VALUE=0


[gcode_macro main_white]
gcode:
     set_pin PIN=MAIN_RED VALUE=255
     set_pin PIN=MAIN_BLUE VALUE=255
     set_pin PIN=MAIN_GREEN VALUE=245


[gcode_macro main_red]
gcode:
     set_pin PIN=MAIN_RED VALUE=255
     set_pin PIN=MAIN_BLUE VALUE=0
     set_pin PIN=MAIN_GREEN VALUE=0


[gcode_macro main_green]
gcode:
     set_pin PIN=MAIN_RED VALUE=0
     set_pin PIN=MAIN_BLUE VALUE=0
     set_pin PIN=MAIN_GREEN VALUE=255



[gcode_macro main_blue]
gcode:
     set_pin PIN=MAIN_RED VALUE=0
     set_pin PIN=MAIN_BLUE VALUE=255
     set_pin PIN=MAIN_GREEN VALUE=0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 63.560
#*# pid_ki = 2.408
#*# pid_kd = 419.494
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 27.630
#*# pid_ki = 2.070
#*# pid_kd = 92.216
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.009167, -0.017500, 0.020000, -0.015833, -0.030833, -0.025833, -0.003333, 0.023333
#*# 	  -0.008333, -0.005833, 0.034167, -0.009167, 0.001667, 0.008333, -0.002500, 0.011667
#*# 	  0.005000, -0.000000, -0.015000, -0.014167, 0.010000, 0.000000, 0.011667, 0.009167
#*# 	  -0.009167, -0.000833, 0.002500, 0.008333, 0.041667, 0.023333, 0.019167, 0.055000
#*# 	  -0.016667, 0.002500, 0.025833, 0.000000, -0.000833, 0.018333, 0.065000, 0.052500
#*# 	  -0.004167, 0.001667, -0.013333, 0.012500, 0.018333, 0.050000, 0.050000, 0.036667
#*# 	  -0.044167, 0.021667, 0.002500, 0.010000, 0.010000, 0.026667, 0.059167, 0.080833
#*# 	  -0.027500, -0.026667, -0.028333, 0.012500, 0.020000, 0.018333, 0.064167, 0.106667
#*# tension = 0.2
#*# min_x = 5.0
#*# algo = bicubic
#*# y_count = 8
#*# mesh_y_pps = 2
#*# min_y = 41.5
#*# x_count = 8
#*# max_y = 249.96
#*# mesh_x_pps = 2
#*# max_x = 259.94
#*#
#*# [bed_mesh PLA]
#*# version = 1
#*# points =
#*# 	  -0.009167, -0.017500, 0.020000, -0.015833, -0.030833, -0.025833, -0.003333, 0.023333
#*# 	  -0.008333, -0.005833, 0.034167, -0.009167, 0.001667, 0.008333, -0.002500, 0.011667
#*# 	  0.005000, -0.000000, -0.015000, -0.014167, 0.010000, 0.000000, 0.011667, 0.009167
#*# 	  -0.009167, -0.000833, 0.002500, 0.008333, 0.041667, 0.023333, 0.019167, 0.055000
#*# 	  -0.016667, 0.002500, 0.025833, 0.000000, -0.000833, 0.018333, 0.065000, 0.052500
#*# 	  -0.004167, 0.001667, -0.013333, 0.012500, 0.018333, 0.050000, 0.050000, 0.036667
#*# 	  -0.044167, 0.021667, 0.002500, 0.010000, 0.010000, 0.026667, 0.059167, 0.080833
#*# 	  -0.027500, -0.026667, -0.028333, 0.012500, 0.020000, 0.018333, 0.064167, 0.106667
#*# x_count = 8
#*# y_count = 8
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 259.94
#*# min_y = 41.5
#*# max_y = 249.96
